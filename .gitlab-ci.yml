stages:
  - test

# Global default parameters set for all jobs unless overridden by job-specific
# configuration.
default:
  image: python:3.9-buster
  interruptible: true

# Global default variables set for all jobs unless overridden by job-specific
# configuration.
variables:
  LC_ALL: "C.UTF-8"
  LANG: "C.UTF-8"

# Common job specification not otherwise specifiable in the `default` section
# above.
.test_job_defaults:
  stage: test
  tags:
    - linux
    - docker
    - test
  rules:
    # Enable tests when running:
    #   - a merge-request pipeline.
    #   - tag builds
    #   - branch pipelines when the branch pipeline is for the default branch
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - when: never  # explicit fail-exclude terminal condition.

# Common setup script lines for test jobs
.test_setup: &test_setup
  - apt-get -y update
  - python --version
  - pip install -U pip
  - pip install -r requirements.txt
                -e .

.pytest_cmd: &pytest_cmd
  - pytest --cov=smqtk_dataprovider --cov-config=.pytest.coveragerc


###############################################################################
# Jobs

test:docs_build:
  extends: .test_job_defaults
  script:
    - *test_setup  # expand `&test_setup` anchor above into here.
    - cd docs
    - make html
    - stat _build/html/index.html

test:unittests:
  extends: .test_job_defaults
  parallel:
    matrix:
      - IMAGE: ["python:3.6-buster",
                "python:3.7-buster",
                "python:3.8-buster",
                "python:3.9-buster"]
        OPT_REQ: ["",
                  "opt-girder.txt",
                  "opt-psql.txt",
                  "opt-mimetype-magic.txt"]
  image: $IMAGE
  script:
    - *test_setup  # expand `&test_setup` anchor above into here.
    - |
      REQ_FILE="requirements/$OPT_REQ"
      if [[ -f "$REQ_FILE" ]]
      then
        pip install -r requirements/"$OPT_REQ"
      fi
    - *pytest_cmd

test:lint:
  extends: .test_job_defaults
  script:
    - *test_setup  # expand `&test_setup` anchor above into here.
    - flake8

test:typecheck:
  extends: .test_job_defaults
  script:
    - *test_setup
    - mypy

test:added_a_change_note:
  extends: .test_job_defaults
  script:
    - git remote -v
    - git branch -a
    - TARGET=origin/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - echo "TARGET = $TARGET"
    - |
      FOUND=$(git diff --name-status --diff-filter=d ${TARGET} HEAD | grep "^\w\s*docs/release_notes/pending" || echo "")
      if [[ "$FOUND" = "" ]]
      then
        echo "No \"pending_*\" change notes files have been modified. Please add a change note!"
        exit 1
      fi

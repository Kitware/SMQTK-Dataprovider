[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

###############################################################################
[tool.poetry]
name = "smqtk_dataprovider"
# REMEMBER: `distutils.version.*Version` types can be used to compare versions
# from strings like this.
# SMQTK prefers to use the strict numbering standard when possible.
version = "0.16.0"
description = "SMQTK Data provision abstractions and implementations"
license = "BSD-3-Clause"
authors = ["Kitware, Inc. <smqtk-developers@kitware.com>"]
readme = "README.md"
repository = "https://github.com/Kitware/SMQTK-Dataprovider"
documentation = "https://smqtk-dataprovider.readthedocs.io/"
classifiers = [
        'Development Status :: 3 - Alpha',
        'Intended Audience :: Developers',
        'Intended Audience :: Science/Research',
        'License :: OSI Approved :: BSD License',
        'Operating System :: MacOS :: MacOS X',
        'Operating System :: Unix',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.7',
        'Programming Language :: Python :: 3.8',
        'Programming Language :: Python :: 3.9',
        'Programming Language :: Python :: 3.10',
]

[tool.poetry.dependencies]
python = "^3.7"
numpy = "*"
requests = "*"
smqtk-core = ">=0.19"
girder-client = {version = "^3.1.3", optional = true}
file-magic = {version = "^0.4.0", optional = true}
psycopg2-binary = {version = "^2.8.6", optional = true}

[tool.poetry.extras]
girder = ["girder-client"]
filemagic = ["file-magic"]
psql = ["psycopg2-binary"]

[tool.poetry.dev-dependencies]
# CI
flake8 = "*"
flake8-mutable = "*"
mypy = "*"
# Docs
# - Also see: `docs/readthedocs-reqs.txt` for use by RTD
Sphinx = "*"
sphinx-rtd-theme = "*"
sphinx-argparse = "*"
sphinx-prompt = "*"
livereload = "*"
# Testing
coverage = "*"
pytest = "*"
pytest-cov = "*"
# Development
ipython = "*"

[tool.poetry.plugins."smqtk_plugins"]
# DataElement
"smqtk_dataprovider.impls.data_element.file" = "smqtk_dataprovider.impls.data_element.file"
"smqtk_dataprovider.impls.data_element.girder" = "smqtk_dataprovider.impls.data_element.girder"
"smqtk_dataprovider.impls.data_element.hbase" = "smqtk_dataprovider.impls.data_element.hbase"
"smqtk_dataprovider.impls.data_element.matrix" = "smqtk_dataprovider.impls.data_element.matrix"
"smqtk_dataprovider.impls.data_element.memory" = "smqtk_dataprovider.impls.data_element.memory"
"smqtk_dataprovider.impls.data_element.psql" = "smqtk_dataprovider.impls.data_element.psql"
"smqtk_dataprovider.impls.data_element.url" = "smqtk_dataprovider.impls.data_element.url"
## DataSet
"smqtk_dataprovider.impls.data_set.file" = "smqtk_dataprovider.impls.data_set.file"
"smqtk_dataprovider.impls.data_set.kvstore_backed" = "smqtk_dataprovider.impls.data_set.kvstore_backed"
"smqtk_dataprovider.impls.data_set.memory" = "smqtk_dataprovider.impls.data_set.memory"
"smqtk_dataprovider.impls.data_set.psql" = "smqtk_dataprovider.impls.data_set.psql"
## KeyValueStore
"smqtk_dataprovider.impls.key_value_store.memory" = "smqtk_dataprovider.impls.key_value_store.memory"
"smqtk_dataprovider.impls.key_value_store.postgres" = "smqtk_dataprovider.impls.key_value_store.postgres"

###############################################################################
[tool.pytest.ini_options]
addopts = [
    "-lv",                          # Show local in trace-backs.
    "--doctest-modules",            # Increased verbosity.
    "--tb=long",                    # Trace-back print mode.
    "--cov=./smqtk_dataprovider",   # Cover our package specifically
    "--cov=./tests",                # Also cover our tests for dead spots
    "--cov-report=term",            # Coverage report to terminal
    "--cov-report=xml:coverage.xml" # For external tool reporting
]
testpaths = [
    "tests",
    "smqtk_dataprovider",
]
norecursedirs = [
    "tests/data"
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
]
